{"version":3,"sources":["components/Profile.js","components/Statistic.js","components/FriendsListItem.js","components/Friends.js","components/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["Profile","avatar","name","tag","location","statsFollowers","statsViews","statsLikes","className","src","alt","width","Statistic","title","stats","map","statItem","label","percentage","id","defaultProps","FriendListItem","isOnline","FriendList","friendsMany","friend","FriendsListItem","TransactionHistory","items","classes","makeStyles","table","minWidth","maxWidth","cell","useStyles","Table","TableHead","TableRow","TableCell","TableBody","item","type","amount","currency","App","user","followers","views","likes","statistics","friends","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.573e176c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n//import user from './components/user.json';\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Profile.css\";\r\nconst Profile = ({\r\n  avatar,\r\n  name,\r\n  tag,\r\n  location,\r\n  statsFollowers,\r\n  statsViews,\r\n  statsLikes,\r\n}) => {\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"description\">\r\n        <img src={avatar} alt={name} width=\"150\" />\r\n        <p>{name}</p>\r\n        <p>@{tag}</p>\r\n        <p className=\"location\">{location}</p>\r\n      </div>\r\n\r\n      <ul className=\"Stats\">\r\n        <li className=\"StatItem\">\r\n          <span className=\"label\">Followers</span>\r\n          <span className=\"quantity\">{statsFollowers}</span>\r\n        </li>\r\n        <li className=\"StatItem\">\r\n          <span className=\"label\">Views</span>\r\n          <span className=\"quantity\">{statsViews}</span>\r\n        </li>\r\n        <li className=\"StatItem\">\r\n          <span className=\"label\">Likes</span>\r\n          <span className=\"quantity\">{statsLikes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  statsFollowers: PropTypes.number.isRequired,\r\n  statsViews: PropTypes.number.isRequired,\r\n  statsLikes: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//import statistics from './statistical-data.json';\r\nimport \"./Statistic.css\";\r\n\r\nconst Statistic = ({ title, stats }) => {\r\n  return (\r\n    <section className=\"section\">\r\n      <h2 className=\"Title\">{title}</h2>\r\n\r\n      <ul className=\"Statlist\">\r\n        {stats.map((statItem) => (\r\n          <li key={statItem.id} className=\"stat-item\">\r\n            <span className=\"label\">{statItem.label}</span>\r\n            <span className=\"percentage\">{statItem.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistic.defaultProps = {\r\n  title: \"title\",\r\n};\r\n\r\nStatistic.propTypes = {\r\n  title: PropTypes.string,\r\n  label: PropTypes.string.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistic;\r\n","import React from \"react\";\r\nimport Brightness1Icon from \"@material-ui/icons/Brightness1\";\r\nconst FriendListItem = ({ isOnline, avatar, name }) => {\r\n  return (\r\n    <li className=\"item\">\r\n      <span className={isOnline > 0 ? \"greenCircle\" : \"redCircle\"}>\r\n        <Brightness1Icon></Brightness1Icon>\r\n      </span>\r\n      <img className=\"Avatar\" src={avatar} alt={name} width=\"150\" />\r\n      <p>{name}</p>\r\n    </li>\r\n  );\r\n};\r\nexport default FriendListItem;\r\n","import React from \"react\";\r\nimport FriendsListItem from \"./FriendsListItem\";\r\nimport \"./FriendList.css\";\r\nconst FriendList = ({ friendsMany }) => {\r\n  return (\r\n    <ul className=\"FriendList\">\r\n      {friendsMany.map((friend) => (\r\n        <FriendsListItem\r\n          key={friend.id}\r\n          isOnline={friend.isOnline}\r\n          avatar={friend.avatar}\r\n          name={friend.name}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      \"margin-left\": \"auto\",\r\n      \"margin-right\": \"auto\",\r\n      minWidth: 150,\r\n      maxWidth: 450,\r\n      \"border-top\": \"solid 1px #000\",\r\n      \"border-bottom\": \"solid 1px #000\",\r\n    },\r\n    cell: {\r\n      \"border-right\": \"solid 1px #000\",\r\n      \"border-left\": \"solid 1px #000\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  return (\r\n    <Table className={classes.table}>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell className={classes.cell}>TYPE</TableCell>\r\n          <TableCell className={classes.cell}>AMOUNT</TableCell>\r\n          <TableCell className={classes.cell}>CURRENCY</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n\r\n      <TableBody>\r\n        {items.map((item) => (\r\n          <TableRow key={item.id}>\r\n            <TableCell className={classes.cell}>{item.type}</TableCell>\r\n            <TableCell className={classes.cell}>{item.amount}</TableCell>\r\n            <TableCell className={classes.cell}>{item.currency}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.number.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\nimport Profile from \"./components/Profile\";\nimport Statistic from \"./components/Statistic\";\nimport FriendList from \"./components/Friends\";\nimport user from \"./user.json\";\nimport statistics from \"./statistical-data.json\";\nimport TransactionHistory from \"./components/TransactionHistory\";\nimport friends from \"./friends.json\";\nimport transactions from \"./transactions.json\";\n//import './App.css';\nconst App = () => {\n  return (\n    <div>\n      <Profile\n        avatar={user.avatar}\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        statsFollowers={user.stats.followers}\n        statsViews={user.stats.views}\n        statsLikes={user.stats.likes}\n      />\n      <Statistic title=\"Upload stats\" stats={statistics} />\n\n      <FriendList friendsMany={friends} />\n\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n};\n//import logo from './logo.svg';\n//import './App.css';\n\n//function App() {\n//return (\n//<div className=\"App\">\n//<header className=\"App-header\">\n//<img src={logo} className=\"App-logo\" alt=\"logo\" />\n//<p>\n// Edit <code>src/App.js</code> and save to reload.\n// </p>\n//<a\n//className=\"App-link\"\n//href=\"https://reactjs.org\"\n//target=\"_blank\"\n//rel=\"noopener noreferrer\"\n//>\n// Learn React\n//</a>\n//</header>\n//</div>\n//);\n//}\n\nexport default App;\n\n//<ul>{statistics.map((statistic) => (\n//<li key={statistic.id}>\n//<Statistic\n//\n//stats = {statistic}\n//></li> ))}\n//</ul>\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n\nreportWebVitals();\n"],"sourceRoot":""}