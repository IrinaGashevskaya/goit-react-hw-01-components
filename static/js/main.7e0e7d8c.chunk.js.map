{"version":3,"sources":["components/Profile/Profile.js","components/Statistic/Statistic.js","components/FriendListItems/FriendListItem.js","components/Friends/Friends.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["Profile","avatar","name","tag","location","stats","className","src","alt","width","followers","views","likes","Statistic","title","map","stat","label","percentage","id","defaultProps","FriendListItem","isOnline","FriendList","friends","friend","TransactionHistory","items","classes","makeStyles","table","minWidth","maxWidth","cell","useStyles","Table","TableHead","TableRow","TableCell","TableBody","item","type","amount","currency","App","user","statistics","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e0e7d8c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Profile.css\";\r\nconst Profile = ({ avatar, name, tag, location, stats }) => {\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"description\">\r\n        <img src={avatar} alt={name} width=\"150\" />\r\n        <p>{name}</p>\r\n        <p>@{tag}</p>\r\n        <p className=\"location\">{location}</p>\r\n      </div>\r\n\r\n      <ul className=\"Stats\">\r\n        <li className=\"StatItem\">\r\n          <span className=\"label\">Followers</span>\r\n          <span className=\"quantity\">{stats.followers}</span>\r\n        </li>\r\n        <li className=\"StatItem\">\r\n          <span className=\"label\">Views</span>\r\n          <span className=\"quantity\">{stats.views}</span>\r\n        </li>\r\n        <li className=\"StatItem\">\r\n          <span className=\"label\">Likes</span>\r\n          <span className=\"quantity\">{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      followers: PropTypes.number.isRequired,\r\n      views: PropTypes.number.isRequired,\r\n      likes: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Statistic.css\";\r\n\r\nconst Statistic = ({ title, stats }) => {\r\n  return (\r\n    <section className=\"section\">\r\n      <h2 className=\"Title\">{title}</h2>\r\n\r\n      <ul className=\"Statlist\">\r\n        {stats.map((stat) => (\r\n          <li key={stat.id} className=\"stat-item\">\r\n            <span className=\"label\">{stat.label}</span>\r\n            <span className=\"percentage\">{stat.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistic.defaultProps = {\r\n  title: \"title\",\r\n};\r\n\r\nStatistic.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistic;\r\n","import React from \"react\";\r\nimport Brightness1Icon from \"@material-ui/icons/Brightness1\";\r\nconst FriendListItem = ({ isOnline, avatar, name }) => {\r\n  return (\r\n    <li className=\"item\">\r\n      <span className={isOnline > 0 ? \"greenCircle\" : \"redCircle\"}>\r\n        <Brightness1Icon />\r\n      </span>\r\n      <img className=\"Avatar\" src={avatar} alt={name} width=\"150\" />\r\n      <p>{name}</p>\r\n    </li>\r\n  );\r\n};\r\nexport default FriendListItem;\r\n","import React from \"react\";\r\nimport \"./Friends.css\";\r\nimport FriendsListItem from \"../FriendListItems/FriendListItem\";\r\nimport PropTypes from \"prop-types\";\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className=\"FriendList\">\r\n      {friends.map((friend) => (\r\n        <FriendsListItem\r\n          key={friend.id}\r\n          isOnline={friend.isOnline}\r\n          avatar={friend.avatar}\r\n          name={friend.name}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      \"margin-left\": \"auto\",\r\n      \"margin-right\": \"auto\",\r\n      minWidth: 150,\r\n      maxWidth: 450,\r\n      \"border-top\": \"solid 1px #000\",\r\n      \"border-bottom\": \"solid 1px #000\",\r\n    },\r\n    cell: {\r\n      \"border-right\": \"solid 1px #000\",\r\n      \"border-left\": \"solid 1px #000\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  return (\r\n    <Table className={classes.table}>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell className={classes.cell}>TYPE</TableCell>\r\n          <TableCell className={classes.cell}>AMOUNT</TableCell>\r\n          <TableCell className={classes.cell}>CURRENCY</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n\r\n      <TableBody>\r\n        {items.map((item) => (\r\n          <TableRow key={item.id}>\r\n            <TableCell className={classes.cell}>{item.type}</TableCell>\r\n            <TableCell className={classes.cell}>{item.amount}</TableCell>\r\n            <TableCell className={classes.cell}>{item.currency}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.number.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\nimport Profile from \"./components/Profile/Profile\";\nimport Statistic from \"./components/Statistic/Statistic\";\nimport FriendList from \"./components/Friends/Friends\";\nimport user from \"./user.json\";\nimport statistics from \"./statistical-data.json\";\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\nimport friends from \"./friends.json\";\nimport transactions from \"./transactions.json\";\n\nconst App = () => {\n  return (\n    <div>\n      <Profile\n        avatar={user.avatar}\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        stats={user.stats}\n      />\n      <Statistic title=\"Upload stats\" stats={statistics} />\n      <Statistic stats={statistics} />\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n\nreportWebVitals();\n"],"sourceRoot":""}